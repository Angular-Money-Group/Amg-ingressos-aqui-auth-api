# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '8efb6498-9a4a-4bb5-86e0-ebd6a723ca51'

  # Web app name
  webAppName: ''

  # Environment name
  environmentName: ''

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self

          - task: PowerShell@2
            displayName: 'Run SSH commands'
            inputs:
              targetType: 'inline'
              script: |
                $sshHost = '181.215.134.104'
                $sshUser = 'root'
                $sshPrivateKey = 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDAVmDRjJnCd+Sfq2pXolZeN/31Q7e4RzXaREoph7/Dbup1oFf3UD6ayZH6ZMrFS6+Qvrg7dUjiR6wxgal8j6G01Gkd7fT7OANO6CYP3aAK/4lrpKh5xkrtYbFMMGBtwm1Crd+PaqrgOGqA2TK0w7qmbw7NBkK0kR2caCtnfdwEz/C1M69Y/iAkByC1XvmM2DCV8zadQ86I4ErXhzf3yu6SZMPiURNZdpFvEgbfnbm/LDaCGhLbUvIpv6lU+Gq0V6Pnr0nDksysZ43P9gMbemlILSER3CTvnbI7aWIAgSAjFzOpAKu/G8N3Q6B9HwZ99PFX1YbjCWMF5D59uBwyrfxqIy5ItPOsdr6jxCYqt78HTe1UbD8Qj2LDIHN9zw3XGBzqRZRFOWmtN1LQbMe7TZJr4kVAdTRPIJVdRTJJvfqlv/4x1Piddr9O4H+C0uB37JhjeZJQsdS1rgD3iO4PdBU0bZi1FLqXc93ylfY8kA3H2dL18di5Hjz/7PEzl2tLOBk= windows@DESKTOP-6J831T5'

                Write-Host "Connecting to VPS..."
                Write-Host "SSH Host: $sshHost"
                Write-Host "SSH User: $sshUser"

                $scriptContent = @"
                cd ingressos-aqui/
                git pull
                npm install
                npm run build
                "@

                $ssh = New-SSHSession -ComputerName $sshHost -Credential (Get-Credential -UserName $sshUser -PrivateKey $sshPrivateKey)
                Invoke-SSHCommand -SessionId $ssh.SessionId -Command $scriptContent
                Remove-SSHSession -SessionId $ssh.SessionId
